
# Create resource group
az group create -n AksGroup -l southeastasia

# Create AKS Cluster
az ad sp create-for-rbac -n AksSp
# {
#   "appId": "d77ef564-d498-4825-a222-0f86000a6fb7",   
#   "displayName": "AksSp",
#   "name": "http://AksSp",
#   "password": "4220486d-ea77-4ed4-a1e3-5ca752d95510",
#   "tenant": "fc73ed10-905f-4b66-85d6-ae10c14623d7"
# }

#Get available versions of Kubernetes in  your region
az aks get-versions -l southeastasia --query 'orchestrators[-1].orchestratorVersion' -o tsv

# Create AKS cluster 
az aks create --resource-group AksGroup \
    --name sonuakscluster \
    --location southeastasia \
    --kubernetes-version 1.17.0 \
    --generate-ssh-keys \
    --node-count 3 \
    --node-vm-size Standard_D2s_v3 \
    --load-balancer-sku basic \
    --service-principal  d77ef564-d498-4825-a222-0f86000a6fb7 \
    --client-secret 4220486d-ea77-4ed4-a1e3-5ca752d95510

# Install kubectl in Client machine
az aks install-cli

# Get the version of kubectl installed
kubectl version

# Login to AKS cluster
az aks get-credentials -n sonuakscluster -g AksGroup

#Get the list of nodes
kubectl get node

#Get the list of pods an services
kubectl get pods
kubectl get svc

# Deploy nginx containers in AKS
kubectl apply -f ./Containers/nginx-deploy.yaml

#Get the pod status
kubectl get pods
# Get replicaset details
kubectl get rs

# Get details of a pod
kubectl describe pod nginx-747cdcb89d-55thv

# Create a service for nginx (LB) 
kubectl apply -f ./Containers/nginx-service.yaml

#Get list of services
kubectl get svc

#Install nginx ingress with helm 3.0
helm repo add stable https://kubernetes-charts.storage.googleapis.com/

helm repo update

#Create a namespace for ingress resources
kubectl create namespace ingress

helm install ingress stable/nginx-ingress --namespace ingress

# Get public IP of ingress
kubectl get svc  -n ingress  ingress-nginx-ingress-controller

# replace the IP in ingress controller YAML file on host parameter
kubectl apply -f ./Containers/nginx-ingress.yaml

# Helloworld demo
kubectl apply -f ./Containers/helloworld-deploy.yaml
kubectl apply -f ./Containers/helloworld-service.yaml

kubectl delete deploy helloworld
kubectl delete svc helloworld-svc

